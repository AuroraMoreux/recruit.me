@model RecruitMe.Web.ViewModels.JobOffers.JobOfferDetailsViewModel

@{
    ViewData["Title"] = Model.Title;
    var isFullTimeAsString = Model.IsFullTime == true ? "Yes" : "No";
    var isRemoteAsString = Model.IsRemote == true ? "Yes" : "No";
    var officeAddress = Model.OfficeAddress != null ? ", " + Model.OfficeAddress : string.Empty;
    var jobTypes = string.Join("; ", Model.JobTypes);
    var languages = string.Join("; ", Model.Languages);
    var skills = string.Join("; ", Model.Skills);
}

<h1>@ViewData["Title"]</h1>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Position Details:</h5>
        <p class="card-text"><strong>Employer: </strong>@Model.EmployerName</p>
        <p class="card-text"><strong>City: </strong>@Model.City; <strong>Position Level: </strong>@Model.JobLevelName; <strong>Full-time: </strong>@isFullTimeAsString; <strong>Remote: </strong>@isRemoteAsString; <strong>Type: </strong>@jobTypes; <strong>Sector: </strong>@Model.JobSectorName</p>
        @if (Model.Salary.HasValue)
        {
            <p class="card-text"><strong>Salary: </strong>@Model.Salary € </p>
        }

        <p class="card-text"><strong>Required Languages: </strong>@languages; <strong>Required Skills: </strong>@skills </p>
    </div>
</div>
<hr />
<div class="card">
    <div class="card-body">
    <h5 class="card-title">Position Description:</h5>
        <p class="card-text">@Html.Raw(Model.Description)</p>
    </div>
</div>